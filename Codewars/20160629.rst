Caesar Cipher Helper
====================
Write a class that, when given a string, will return an uppercase string with each letter shifted forward in the alphabet by however many spots the cipher was initialized to.

For example: ::

    c = CaesarCipher(5); # creates a CipherHelper with a shift of five
    c.encode('Codewars') # returns 'HTIJBFWX'
    c.decode('BFKKQJX') # returns 'WAFFLES'
If something in the string is not in the alphabet (e.g. punctuation, spaces), simply leave it as is.

암호학의 기본인 Caesar암호의 encode decode 하는문제이다.
나는 잘 몰라서 C언어때 구현했던것처럼 배열에서 +5 -5하는 식으로 구현하였다.

다음은 bestpractice이다.

.. code-block:: python

    from string import maketrans

    class CaesarCipher(object):

        def __init__(self, shift):
            self.alpha = "abcdefghijklmnopqrstuvwxyz".upper()
            self.newalpha = self.alpha[shift:] + self.alpha[:shift]


        def encode(self, str):
            t = maketrans(self.alpha, self.newalpha)
            return str.upper().translate(t)



        def decode(self, str):
            t = maketrans(self.newalpha, self.alpha)
            return str.upper().translate(t)

오늘 배운것은 maketrans함수와 translate함수이다

translate함수는 두가지 string을 이용하여 같은 위치에 있는 값을 반환해주는 함수이고
maketrans는 translate를 사용하기 위해 만드는것.