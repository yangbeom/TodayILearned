Strip Url Params
================

Complete the method so that it does the following:

Removes any duplicate query string parameters from the url
Removes any query string parameters specified within the 2nd argument (optional array)
Examples: ::

    stripUrlParams('www.codewars.com?a=1&b=2&a=2') // returns 'www.codewars.com?a=1&b=2'
    stripUrlParams('www.codewars.com?a=1&b=2&a=2', ['b']) // returns 'www.codewars.com?a=1'
    stripUrlParams('www.codewars.com', ['b']) // returns 'www.codewars.com'

URL을 입력받고 중복된 파라메터는 나중에 있는 파라메터를 지우고 `params_to_strip` 에 값이 있다면 지우는 것이다.
.. code-block:: python

    def strip_url_params(url, params_to_strip = []):
        if url.find('?')!= -1:
            params = dict()
            for param in url[url.find('?')+1:].split('&'):
                if param[:param.find('=')] not in params.keys():
                    params[param[:param.find('=')]]=param[param.find('=')+1:]
            if params_to_strip:
                for strip in params_to_strip:
                    params.pop(strip)
            return url[:url.find('?')+1]+'&'.join([x[0]+'='+x[1] for x in sorted(params.items())])
        else:
            return url

나는 param을 나눠서 중복되는것을 제외하고 dict()형으로 구분해주었다.

그 후 params_to_strip 에 값이있으면 pop을 이용하여 제거해주고 url을 리턴해주었다.

다음은 best practice의 2번째이다.
.. code-block:: python

    def strip_url_params(url, params_to_strip = []):
        if '?' not in url:
            return url
        hier, query = url.split('?')
        params = {}
        for param in query.split('&'):
            k, v = param.split('=')
            if k not in params and k not in params_to_strip:
                params[k] = v
        return '{0}?{1}'.format(hier, '&'.join('='.join(kv) for kv in params.items()))

best practice를 보고 아차싶었다.

어차피 ?를 기준으로 앞과 뒤로 나눌것이였으면 index를 이용하지 않고 split함수를 이용했으면 됐을텐데 말이다.

심지어 param을 정의할때 split을 사용했었다.

그리고 마지막에 bestpractice처럼 join을 사용하고 싶었는데 잘안되서 리스트를 하나 만들어서 해주었는데

bestparctice를 보고 하나 배웠다.
